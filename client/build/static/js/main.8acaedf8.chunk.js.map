{"version":3,"sources":["components/NavBar/index.js","components/Header/index.js","components/Wrapper/index.js","pages/NoMatch.js","components/Form/index.js","utils/API.js","components/Results/index.js","pages/Search.js","pages/Saved.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","react_router_dom","to","window","location","pathname","Header","props","Jumbotron","style","Wrapper","Object","assign","NoMatch","components_Header","Form","htmlFor","onChange","handleInputChange","value","search","name","type","placeholder","id","onClick","handleFormSubmit","API","getBook","axios","get","concat","deleteBook","delete","then","result","data","saveBook","bookData","post","savedBooks","Results","state","handleSave","book","_this","map","_id","includes","deletedBook","setState","filter","catch","err","console","error","savedBook","_this2","this","_this3","books","length","key","alt","title","src","image","authors","description","href","link","target","rel","Component","Search","makeBook","volumeInfo","imageLinks","thumbnail","previewLink","searchBook","res","items","event","defineProperty","preventDefault","components_Form","components_Results","React","Saved","App","NavBar","components_Wrapper","react_router","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8acaedf8.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\n\nfunction Navbar() {\n    return (\n\n\n        <nav className=\"navbar navbar-expand-lg text-light\">\n            <div className=\"container\">\n                <Link className=\"navbar-brand\" to=\"/\">Google Books</Link>\n                <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\">\n                        <Link\n                            to=\"/search\"\n                            className={window.location.pathname === \"/search\" ? \"nav-link active\" : \"nav-link\"}\n                        > Search</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link\n                            to=\"/saved\"\n                            className={window.location.pathname === \"/saved\" ? \"nav-link active\" : \"nav-link\"}\n                        >Saved</Link>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n\n    );\n}\n\nexport default Navbar;","import React from \"react\";\nimport {Jumbotron} from \"react-bootstrap\";\nimport style from \"./style.css\";\n\nfunction Header(props) {\n    return (\n        <Jumbotron className=\"text-center container\" style={style} >\n                <h1>Google Books Search</h1>\n        </Jumbotron>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\" {...props} />;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport Header from \"../components/Header\";\n\nfunction NoMatch() {\n  return (\n    <div>\n          <Header>\n            <h1>404 Page Not Found</h1>\n          </Header>\n    </div>\n  );\n}\n\nexport default NoMatch;\n","import React from \"react\";\nimport \"./style.css\"\n\n\nfunction Form(props){\nreturn (\n  <div className=\"container\">\n  <form>\n    <div className=\"form-group\">\n      <label htmlFor=\"search\"><h2 className=\"form-title\">Search for and save Books of Interest</h2></label>\n      <input\n        onChange={props.handleInputChange}\n        value={props.search}\n        name=\"search\"\n        type=\"text\"\n        className=\"form-control\"\n        placeholder=\"Search for a Book\"\n        id=\"search\"\n      />\n      <button onClick={props.handleFormSubmit} className=\"btn btn-dark mt-3 mb-5 submit-button\">\n        Search\n        </button>\n    </div>\n  </form>\n  </div>\n);\n}\n\nexport default Form;\n","import axios from \"axios\";\n\nexport default {\n  getBook: function (search) {\n    return axios.get(`https://www.googleapis.com/books/v1/volumes?q=${search}`);\n  },\n  // Deletes the book with the given id\n  deleteBook: function (id) {\n    return axios.delete(\"/api/books/\" + id).then(result => result.data);\n  },\n  // Saves a book to the database\n  saveBook: function (bookData) {\n    return axios.post(\"/api/books\", bookData).then(result => result.data);\n  },\n  // Get the saved a books from the database\n  savedBooks: function () {\n    return axios.get(\"/api/books\").then(result => result.data);\n  }\n};\n","import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\n\nclass Results extends Component {\n\n    state = {\n        savedBooks: [],\n    }\n\n    componentDidMount() {\n        API.savedBooks()\n            .then(savedBooks => this.setState({ savedBooks: savedBooks }))\n            .catch(err => console.error(err));\n    }\n\n    handleSave = book => {\n\n        if (this.state.savedBooks.map(book => book._id).includes(book._id)) {\n            API.deleteBook(book._id)\n                .then(deletedBook => this.setState({ savedBooks: this.state.savedBooks.filter(book => book._id !== deletedBook._id) }))\n                .catch(err => console.error(err));\n        } else {\n            API.saveBook(book)\n                .then(savedBook => this.setState({ savedBooks: this.state.savedBooks.concat([savedBook]) }))\n                .catch(err => console.error(err));\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {!this.props.books.length ? (\n                    <h1 className=\"text-center\">No Results to Display</h1>\n                ) : (\n                        <div>\n                            {this.props.books.map(result => (\n                                <div className=\"card mb-3\" key={result._id}>\n                                    <div className=\"row\">\n                                        <div className=\"col-md-2\">\n                                            <img alt={result.title} className=\"img-fluid\" src={result.image} />\n                                        </div>\n                                        <div className=\"col-md-10\">\n                                            <div className=\"card-body\">\n                                                <h5 className=\"card-title\">{result.title} by {result.authors}</h5>\n                                                <p className=\"card-text\">{result.description}</p>\n                                                <div>\n                                                    <a href={result.link} className=\"btn badge-pill btn-outline-dark mt-3 view-button\" target=\"_blank\" rel=\"noopener noreferrer\">View</a>\n                                                    <button onClick={() => this.handleSave(result)} className=\"btn badge-pill btn-outline-warning mt-3 ml-3 save-button\" >\n                                                        {this.state.savedBooks.map(book => book._id).includes(result._id) ? \"Unsave\" : \"Save\"}\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    )}\n            </div>\n        )\n    }\n}\n\nexport default Results;\n","import React from \"react\";\nimport Form from \"../components/Form\";\nimport Results from \"../components/Results\";\nimport API from \"../utils/API\";\nimport \"../App.css\";\n\nclass Search extends React.Component {\n    state = {\n        search: \"\",\n        value: \"Buddhism\",\n        books: []\n    };\n\n    componentDidMount() {\n        let search = this.state.value;\n        this.searchBook(search);\n    }\n\n    makeBook = bookData => {\n        return {\n            _id: bookData.id,\n            title: bookData.volumeInfo.title,\n            authors: bookData.volumeInfo.authors,\n            description: bookData.volumeInfo.description,\n            image: bookData.volumeInfo.imageLinks.thumbnail,\n            link: bookData.volumeInfo.previewLink\n        }\n    }\n\n    searchBook = search => {\n        API.getBook(search)\n            .then(res => this.setState({ books: res.data.items.map(bookData => this.makeBook(bookData)) }))\n            .catch(err => console.error(err));\n    }; \n\n    handleInputChange = event => {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        this.searchBook(this.state.search);\n    };\n\n    render() {\n        return (\n            <div>\n                \n                <Form\n                    search={this.state.search}\n                    handleInputChange={this.handleInputChange}\n                    handleFormSubmit={this.handleFormSubmit}\n                />\n                <div className=\"container\">\n                    <h2>Results</h2>\n                    <Results books={this.state.books} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Results from \"../components/Results\";\n\nclass Saved extends Component {\n    state = {\n        savedBooks: [],\n    }\n\n    componentDidMount() {\n        API.savedBooks()\n            .then(savedBooks => this.setState({ savedBooks: savedBooks }))\n            .catch(err => console.error(err));\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h2>Saved books</h2>\n                <Results books={this.state.savedBooks} />\n            </div>\n        )\n    }\n}\n\nexport default Saved;","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport Header from \"./components/Header\";\nimport Wrapper from \"./components/Wrapper\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Search from \"./pages/Search\";\nimport Saved from \"./pages/Saved\";\nimport \"./App.css\";\n\nclass App extends Component {\n \n  render() {\n    return (\n      <Router>\n        <div>\n          <NavBar />\n          <Header /> \n          <Wrapper>\n            <Route exact path=\"/\" component={Search} />\n            <Route exact path=\"/search\" component={Search} />\n            <Route exact path=\"/saved\" component={Saved} />\n            <Route exact path=\"/noMatch\" component={NoMatch} />\n          </Wrapper>\n        </div>\n      </Router>\n    )\n  };\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}